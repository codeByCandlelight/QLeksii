{"Types":["const texts = new GraphQLObjectType({ name:'texts', fields:() =>({_id:{type:GraphQLString}, text:{type:GraphQLString}, NPI_ID:{type:GraphQLString}, CIN_ID:{type:GraphQLString}, createdAt:{type:GraphQLString}, })});","const users = new GraphQLObjectType({ name:'users', fields:() =>({_id:{type:GraphQLString}, mainPicture:{type:GraphQLString}, })});","const doctors = new GraphQLObjectType({ name:'doctors', fields:() =>({_id:{type:GraphQLString}, mainPicture:{type:GraphQLString}, uffix:{type:GraphQLString}, firstName:{type:GraphQLString}, lastName:{type:GraphQLString}, speciality:{type:GraphQLString}, NPI_ID:{type:GraphQLString}, email:{type:GraphQLString}, password:{type:GraphQLString}, City:{type:GraphQLString}, })});","const sessions = new GraphQLObjectType({ name:'sessions', fields:() =>({})});"],"Resolvers":"const RootQuery = new GraphQLObjectType({name:'Query', fields:{  texts : {type:new GraphQLList(texts),resolve(parent, args){return texts.find({});}} textsFindById : {type:new GraphQLList(texts),args: {_id:{type : GraphQLString}},resolve(parent, args){return texts.findOne({_id:args._id});}} users : {type:new GraphQLList(users),resolve(parent, args){return users.find({});}} usersFindById : {type:new GraphQLList(users),args: {_id:{type : GraphQLString}},resolve(parent, args){return users.findOne({_id:args._id});}} doctors : {type:new GraphQLList(doctors),resolve(parent, args){return doctors.find({});}} doctorsFindById : {type:new GraphQLList(doctors),args: {_id:{type : GraphQLString}},resolve(parent, args){return doctors.findOne({_id:args._id});}} sessions : {type:new GraphQLList(sessions),resolve(parent, args){return sessions.find({});}} sessionsFindById : {type:new GraphQLList(sessions),args: {_id:{type : GraphQLString}},resolve(parent, args){return sessions.findOne({_id:args._id});}}} });","Mutations":"const Mutation = new GraphQLObjectType({name:'Mutation', fields:{addtextsByID : {type : texts,args : {insert:{type : GraphQLObjectType}},resolve(parent, args){return texts.create(args.insert)}}updatetextsByID : {type : texts,args : {_id:{type : GraphQLString}, update:{type : GraphQLObjectType}},resolve(parent, args){return texts.updateOne({_id:args._id}, args.update)}}deletetextsByID : {type : texts, args : {_id:{type : GraphQLString}}, resolve(parent, args){return texts.deleteOne({_id:args._id})}}addusersByID : {type : users,args : {insert:{type : GraphQLObjectType}},resolve(parent, args){return users.create(args.insert)}}updateusersByID : {type : users,args : {_id:{type : GraphQLString}, update:{type : GraphQLObjectType}},resolve(parent, args){return users.updateOne({_id:args._id}, args.update)}}deleteusersByID : {type : users, args : {_id:{type : GraphQLString}}, resolve(parent, args){return users.deleteOne({_id:args._id})}}adddoctorsByID : {type : doctors,args : {insert:{type : GraphQLObjectType}},resolve(parent, args){return doctors.create(args.insert)}}updatedoctorsByID : {type : doctors,args : {_id:{type : GraphQLString}, update:{type : GraphQLObjectType}},resolve(parent, args){return doctors.updateOne({_id:args._id}, args.update)}}deletedoctorsByID : {type : doctors, args : {_id:{type : GraphQLString}}, resolve(parent, args){return doctors.deleteOne({_id:args._id})}}addsessionsByID : {type : sessions,args : {insert:{type : GraphQLObjectType}},resolve(parent, args){return sessions.create(args.insert)}}updatesessionsByID : {type : sessions,args : {_id:{type : GraphQLString}, update:{type : GraphQLObjectType}},resolve(parent, args){return sessions.updateOne({_id:args._id}, args.update)}}deletesessionsByID : {type : sessions, args : {_id:{type : GraphQLString}}, resolve(parent, args){return sessions.deleteOne({_id:args._id})}}} });"}