{"Types":["const texts = new GraphQLObjectType({ name:'texts', fields:() =>({_id:{type:GraphQLString}, text:{type:GraphQLString}, NPI_ID:{type:GraphQLString}, CIN_ID:{type:GraphQLString}, createdAt:{type:GraphQLString}, })});","const users = new GraphQLObjectType({ name:'users', fields:() =>({_id:{type:GraphQLString}, mainPicture:{type:GraphQLString}, })});","const doctors = new GraphQLObjectType({ name:'doctors', fields:() =>({_id:{type:GraphQLString}, mainPicture:{type:GraphQLString}, uffix:{type:GraphQLString}, firstName:{type:GraphQLString}, lastName:{type:GraphQLString}, speciality:{type:GraphQLString}, NPI_ID:{type:GraphQLString}, email:{type:GraphQLString}, password:{type:GraphQLString}, City:{type:GraphQLString}, })});","const sessions = new GraphQLObjectType({ name:'sessions', fields:() =>({})});"],"Resolvers":["const RootQueryFortexts = new GraphQLObjectType({ name:'Query',fields:{ 'texts' :{  type:new GraphQLList(texts),resolve(parent, args){ return texts.find({});}}} });","const RootQueryForusers = new GraphQLObjectType({ name:'Query',fields:{ 'users' :{  type:new GraphQLList(users),resolve(parent, args){ return users.find({});}}} });","const RootQueryFordoctors = new GraphQLObjectType({ name:'Query',fields:{ 'doctors' :{  type:new GraphQLList(doctors),resolve(parent, args){ return doctors.find({});}}} });","const RootQueryForsessions = new GraphQLObjectType({ name:'Query',fields:{ 'sessions' :{  type:new GraphQLList(sessions),resolve(parent, args){ return sessions.find({});}}} });"]}